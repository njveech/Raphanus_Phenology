---
title: "ClimateNA_data_pull"
author: "Julia Harenčár"
format: 
  html:
    code-fold: true
    code-tools: true
    code-overflow: wrap
    toc: true
    number-sections: true
theme:
  light: minty
  dark: superhero
editor_options: 
  chunk_output_type: console
---

## Pulling ClimateNA Data

This script is modified from XXX . It uses GPS coordinates and a calculated 'lived climate' time period for each specimen to pull data for each herbarium specimen independently.

First, set working directory and load packages.

```{r}
#| include: false
# load packages
library(tidyverse)
library(cowplot) # for plot aesthetics
library(magrittr)
```

### Generate ClimateNA input file

Then, we load the specimen data and make a new csv with coordinates and IDs in the format required by ClimateNA.

```{r}
#| eval: false
#| include: false

# load the data
specimens <- read.csv("FullSpecimenCCH2Data.csv", header = T)

# make specific dataframe for pulling data from climateNA
# ClimateNA requires an input csv containing the columns ID1, ID2, lat, long, and (optionally) el.
# ID1 and ID2 can be anything you want 
# currently not including elevation, but could calculate this from the gps and add it in later

locs <- specimens %>% 
  mutate(id2 = NA,
         elev = NA) %>% # add a blank ID2 col
  select(id1 = id, id2, lat = decimalLatitude, long = decimalLongitude, elev)

head(locs) # peak at the new df to check; looks good!

# Write out the new df as a csv for input into the ClimateNA program
write.csv(locs[,], "climateNA_locations.csv", row.names = FALSE, quote = FALSE)
# NOTE!! This csv does NOT work for pulling the location data because it is in Mac not windows format. I solved by copying all the data EXCEPT the last, empty line (using sublime) from this saved .csv location file into a copy of the test location file included in the ClimateNA download. Hypothetically I should be able to convert the format of my file, but my one attempt failed and the copy paste worked.
```

#### Get ClimateNA data

I downloaded the ClimateNA program and wine to run on mac. I run the below command line prompt to

```{bash}
# open ClimateNA gui on my mac
  # arch -x86_64 wine Z:\\Users\\juliaharencar\\Documents\\Software\\ClimateNA_v760\\ClimateNA_v7.60.exe
```

To get the data, I select "Historical time series" in the dropdown menu under "multiple locations". Select "monthly all variables (180)". Specify the input file we just created above and an output file. Generate monthly climate data for the time window of interest. Save output file. [Definitions of each variable acronym can be found here.](https://climatebc.ca/help/climateBC/help.htm#_Toc410137604)

Note, growing degree days marked as days \> 5°C: DD5_01 – DD5_12     January - December degree-days above 5°C

### Reformat ClimateNA data

NOTE - eval is false here because generating the all_data df takes a long time (like, minutes), so we will only run when we need to modify the saved output climateNA_full_data_tall.csv.

TASK FOR NATALIE: In the chunk below, it now reads in the new, full climate data set. there are additional variables from before and from what is named in the second 'line' (the "rearrange columns" line). Read in the new dataset to generate all_data. Then, use colnames() to get a list of the variables. Determine what each acronym stands for (hopefully you can find them on the page linked above), and add to the last line of the code that reads in and reformat the data to rename them to more intuitive things (or at least get rid of the weird tailing "\_"). Then re-run the whole chunk to generate the new climateNA_full_data_tall.csv. Open that in excel to check and make sure it looks good!

NATALIE'S WORK TODAY (8/27): I think I created the correct new CSV, but I'd love for you take a look at the values to see if they look okay/if they make sense. In particular the "DD" (degree-days) columns concern me since I can't understand how the number could be \>31 for any given month. I also attempted the code below to create a little table as a quick guide to the different climate variables. I tried to render to see if my table worked, but it bounced back with this error message even after I restarted R:

```         
==> quarto preview ClimateNA_data_pull.qmd --to html --no-watch-inputs --no-browse



processing file: ClimateNA_data_pull.qmd
  |..................                                  |  35% [unnamed-chunk-3]running: bash  -c '# open ClimateNA gui on my mac
  # arch -x86_64 wine Z:\\Users\\juliaharencar\\Documents\\Software\\ClimateNA_v760\\ClimateNA_v7.60.exe'
  |........................                            |  47% [unnamed-chunk-4]

Error in `contrib.url()`:
! trying to use CRAN without setting a mirror
Backtrace:
    ▆
 1. └─utils::install.packages("knitr")
 2.   └─utils::contrib.url(repos, "source")

Quitting from ClimateNA_data_pull.qmd:99-106 [unnamed-chunk-4]
                                                                                                            
Execution halted
```

**Climate Variable Key:**

```{r}
#Create a Table from a CSV to serve as a Key to Climate variables

install.packages("knitr")
library(knitr)
legend <- read.csv("Climate_variable_Legend.csv")
kable(legend, format = "markdown")
```

**Code for reformatting Climate Data for our needs:**

```{r}
#| label: reformat data
#| eval: false
#| include: false

# 3. Reformat ClimateNA data ----------------------------------------------

# Data is formatted with one row per site/year, one column per variable/month

all_data <- read_csv("Raph_locs_1901-2024Mfull.csv") %>%
  select(-id2,-Elevation) %>%
  # Make data tall (one row per variable/site/month/year)
  gather(variable, value, -Year, -id1, -Latitude, -Longitude) %>%
  # Split month from variable name
  separate(variable, -2, into = c("variable", "month"), convert = TRUE) %>%
  # Spread again so that there is one row per site/year/month, one column per variable type
  spread(variable, value) %>%
  # Make a climate date column
  mutate(Year = as.numeric(Year),
         month = as.numeric(month),
         month_pad = str_pad(month, 2, pad = "0"),
         clim_date = as.numeric(paste0(Year, month_pad))) %>%
  # Drop unnecessary columns
  select(-month_pad) %>%
  # Rename to standard variable names
  rename(id = id1, longitude = Longitude, latitude = Latitude, clim_year = Year, clim_month = month, ppt_mm = PPT, srad = rsds, tmin = Tmin, tave = Tave, tmax = Tmax, CMD_mm = CMD, CMI_mm = CMI, chillDD = DD_0_, heatDD = DD_18_, coolDD = DD18_, growDD= DD5_, FFD = NFFD)

# Rearrange columns
all_data %<>%
  select(-latitude,-longitude) %>%
  select(id, clim_year, clim_month, clim_date, everything())

# Now save this data
write.csv(all_data, "climateNA_full_data_tall.csv", row.names = FALSE)

```

### Lived climate calculation

```{r}
# subset to keep just the columns we need (for now, including more than maybe necessary)
specimens <- specimens %>% select(id, institutionCode, specificEpithet, year, month, day, county, locality, decimalLatitude, decimalLongitude, coordinateUncertaintyInMeters)

## WORK FOR NATALIE:
# Determine the first month in each year that had greater than 25mm of precip
# below is example code from Bontrager et al. Modify the code for our data. 


# First we need to calculate a consistent number representing collection date. For now, we will do it as the Bontrager paper did and use Sept 01 as the start of the day count, then the date of collection as the last date. 


```

## Extra code

Code for pulling climateNA data with R - untested, but might work now by using the correctly formatted input file.

```{r}
# setwd("/Users/juliaharencar/Documents/Software/ClimateNA_v760 "); # set the ClimateNA root directory as the working directory 
# exe <- "/Users/juliaharencar/Documents/Software/ClimateNA_v760/ClimateNA_v7.60.exe" 
# inputFile = '/C:\\ InputFiles \\input_test.csv' 
# outputFile = '/C:\\test_normal.csv' 
# yearPeriod = '/C:\\ Perioddat \\Normal_1991_2020.nrm' 
# system2(exe,args= c('/Y', yearPeriod, inputFile, outputFile),wait=T) 
# dat <- read.csv(' C:/test_normal.csv'); head(dat) 
# 
# 
# 
# 
# # how I installed the package:
# devtools::install_github("burnett-m/climatenaR",build_vignettes = TRUE)
# library(climatenaR)
# 
# # try pulling data 
```

```{bash}
# use wine and rosetta with the 86_64 to call ClimateNA and download data
# didn't work before, might now with the fixed .csv file
# arch -x86_64 wine /Users/juliaharencar/Documents/Software/ClimateNA_v760/ClimateNA_v7.60.exe \
#   /Users/juliaharencar/Documents/Github/Raphanus_phenology/climateNA_locations.csv \
#   /Users/juliaharencar/Documents/Github/Raphanus_phenology/ClimateNA_outputt #Periods.txt
```
